import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * The context of the ValidationErrorDirective
 */
interface ValidationErrorContext {
    /**
     * The label
     */
    $implicit: string | null;
    /**
     * The error
     */
    error: any;
}
/**
 * Directive allowing to define the template for an error of a given type (using the `valError` input), using an ng-template.
 * It's used inside the body of the validation errors component, or inside the body of the default validation errors directive.
 * See the documentation of these two for example usages.
 */
export declare class ValidationErrorDirective {
    templateRef: TemplateRef<ValidationErrorContext>;
    /**
     * The type of the error that the content of the template must display.
     */
    type: import("@angular/core").InputSignal<string>;
    static ngTemplateContextGuard(directive: ValidationErrorDirective, context: unknown): context is ValidationErrorContext;
    static ɵfac: i0.ɵɵFactoryDeclaration<ValidationErrorDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ValidationErrorDirective, "ng-template[valError]", never, { "type": { "alias": "valError"; "required": true; "isSignal": true; }; }, {}, never, never, true, never>;
}
export {};
